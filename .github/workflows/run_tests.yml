name: Run Tests

on: [push, pull_request]

permissions:
  checks: write
  pull-requests: write
jobs:
  run-test:
    runs-on: ubuntu-latest
    if: ${{!github.event.pull_request.draft}}
    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build Firmware
        uses: ./.github/actions/build
        with:
          BUILD_WRAPPER_OUT_DIR: build_wrapper_out_dir
      - name: Cache test setup
        uses: actions/cache@v4
        with:
          path: |
            ./test/build
          key: ${{ hashFiles('./test/**/*.cpp') }}
      - name: Install dependencies
        run: |
          MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
          eval "${MATRIX_EVAL}"
          pip install gcovr
          gcovr --version
      - name: Run Test
        run: |
          ./test/test.sh -s
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            ./test/build/xml_out/*
      - name: Analyze with SonarCloud
        if: github.repository == 'AllYarnsAreBeautiful/ayab-firmware' && ( ( github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'AllYarnsAreBeautiful/ayab-firmware' ) || github.event_name == 'push' )
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_WRAPPER_OUT_DIR: build_wrapper_out_dir
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" --define sonar.coverageReportPaths="./test/build/coverage.xml"
